<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Silverlaw&#39;s Blog</title>
  
  
  <link href="https://blog.wuhui2356.top/atom.xml" rel="self"/>
  
  <link href="https://blog.wuhui2356.top/"/>
  <updated>2021-12-09T11:49:45.239Z</updated>
  <id>https://blog.wuhui2356.top/</id>
  
  <author>
    <name>silverlaw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++动态加载lib的插件机制实现</title>
    <link href="https://blog.wuhui2356.top/2020/01/03/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C++%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDDLL%E7%9A%84%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0/"/>
    <id>https://blog.wuhui2356.top/2020/01/03/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C++%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDDLL%E7%9A%84%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-01-03T13:44:25.000Z</published>
    <updated>2021-12-09T11:49:45.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是插件"><a href="#什么是插件" class="headerlink" title="什么是插件"></a>什么是插件</h1><p>插件，想必大家应该是陌生了吧，什么Vim、VS code、JetBrains全家桶啊都支持插件，但是这背后是如何实现的呢？今天我们就来好好掰扯掰扯。首先我们可以先来看看对插件比较官方的定义，还麻烦大家挪挪步<a href="https://baike.baidu.com/item/%E6%8F%92%E4%BB%B6/369160?fr=aladdin">百度百科关于插件的定义</a>，但是这些都不重要，重要的是我们要如何来实现插件机制，如何实现在对已有程序不做任何修改的情况下，对程序功能的扩展。。。</p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>大家先把菜刀准备好啊，需求要来了，贴个代码先：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello world.\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没错，这就是一个简单的<code>Hello world</code>，但是呢,</p><ul><li>产品汪A:   我这个项目要先打印一行<code>123456</code>再显示<code>Hello world</code></li><li>产品汪B:   我这个项目要先先打印<code>Hello world</code>再打印<code>123456</code></li><li>产品汪C:    我这个不显示<code>Hello world</code>，只打印<code>123456</code></li><li>产品汪…….</li></ul><p>这个栗子比较简单，一般我们遇到的需求比这个复杂多了，动不动就是某某功能里面，我要加一个什么什么逻辑，所以针对不同的需求，就要编译N个版本的<code>exe</code>进行交付，然后又要挨着全部测试N遍吗？不，插件机制，就能很好的帮我们解决这个问题。</p><h1 id="引入插件后的程序结构"><a href="#引入插件后的程序结构" class="headerlink" title="引入插件后的程序结构"></a>引入插件后的程序结构</h1><p><img src="../images/C++%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDDLL%E7%9A%84%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0/image-20200308171242234.png" alt="image-20200308171242234"></p><p>整个插件框架大概是这个样子的，最主要的编码工作是在<code>PluginManager</code>这个类里面，其他两个都是约定的接口，但是针对我们上面的需求，就是下面这个样子的：</p><p><img src="../images/C++%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDDLL%E7%9A%84%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0/image-20200308171922648.png" alt="image-20200308171922648"></p><p>其中<code>IPrintEvent</code>是定义的一个打印事件，而<code>PrintPlugin</code>则是具体的打印实现过程，即直接将<code>PrintPlugin</code>的打印实现直接变成<code>so</code>，然后由程序启动后进行动态加载即可。</p><p>废话就不多说了，是骡子是马，咱拉出来溜溜，首先贴个图，便于直观的理解。</p>]]></content>
    
    
    <summary type="html">插件是一种非常强大的程序动态加载机制，往大了看，我们所编写的程序对于操作系统来说就算是一种插件实现，而对于C/C++程序猿来说，则是通过DLL或者so文件的方式，给程序提供一种动态的扩展方式。</summary>
    
    
    
    <category term="编程基础" scheme="https://blog.wuhui2356.top/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="C++" scheme="https://blog.wuhui2356.top/tags/c/"/>
    
    <category term="插件" scheme="https://blog.wuhui2356.top/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
</feed>
